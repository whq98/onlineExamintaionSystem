<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		   http://www.springframework.org/schema/beans/spring-beans.xsd 
		   http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 导入mybatis目录下的属性文件jdbc.properties -->
  	<context:property-placeholder location="classpath:mybatis/jdbc.properties"/>
	
	<!-- spring 整合mybatis -->
	<!-- 数据源  数据库连接池-->
	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${jdbcUrl}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		
		<!-- 连接池私有属性 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="10"></property>
		<!--关闭连接后不自动Commit -->
		<property name="autoCommitOnClose" value="false"></property>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000"></property>
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"></property>
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入上面配置的数据源对象 -->
		<property name="dataSource" ref="ds" />
		<!-- 配置mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- com.fs.po中的类都有别名，比如com.fs.po.Stu的别名是stu或Stu-->
		<property name="typeAliasesPackage" value="com.fs.po"></property>
		<!-- 配置所有的映射文件,要求映射文件都写在目录mapper中 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置mybatis的接口所在的包 -->
		<property name="basePackage" value="com.fs.mapper" />
		<!-- 注入sqlSessionFactory工厂对象 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
</beans>














